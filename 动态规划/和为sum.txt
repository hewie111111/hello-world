题目描述
给定一个有n个正整数的数组A和一个整数sum,求选择数组A中部分数字和为sum的方案数。
当两种选取方案有一个数字的下标不一样,我们就认为是不同的组成方案。
输入描述:
输入为两行:
 第一行为两个正整数n(1 ≤ n ≤ 1000)，sum(1 ≤ sum ≤ 1000)
 第二行为n个正整数A[i](32位整数)，以空格隔开。
输出描述:
输出所求的方案数
示例1
输入
5 15 5 5 10 2 3
复制
4


int const maxn = 1100;
int data[maxn];
long long f[maxn];
int main() {
    int n,sum;
    cin>>n>>sum;
    for (int i=1;i<=n;i++) {
        cin>>data[i];  
    }
    f[0] = 1;
    for (int i=1;i<=n;i++) {
        for (int j=maxn;j>=0;j--) {
            if(j>=data[i]) {
                f[j] += f[j-data[i]];
            }
        }
    }
    cout<<f[sum]<<endl;
